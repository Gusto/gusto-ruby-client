# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Operations
  

    class PostV1CompaniesCompanyIdContractorPaymentGroupsPreviewContractorPayments < ::Crystalline::FieldAugmented
      extend T::Sig

      # UUID of the contractor
      field :contractor_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('contractor_uuid') } }
      # Payment method
      field :payment_method, T.nilable(::GustoEmbedded::Operations::PostV1CompaniesCompanyIdContractorPaymentGroupsPreviewPaymentMethod), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('payment_method'), 'decoder': Utils.enum_from_string(::GustoEmbedded::Operations::PostV1CompaniesCompanyIdContractorPaymentGroupsPreviewPaymentMethod, true) } }
      # Reimbursement amount
      field :reimbursement, T.nilable(::Float), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('reimbursement') } }
      # Wage amount
      field :wage, T.nilable(::Float), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('wage') } }


      sig { params(contractor_uuid: T.nilable(::String), payment_method: T.nilable(::GustoEmbedded::Operations::PostV1CompaniesCompanyIdContractorPaymentGroupsPreviewPaymentMethod), reimbursement: T.nilable(::Float), wage: T.nilable(::Float)).void }
      def initialize(contractor_uuid: nil, payment_method: nil, reimbursement: nil, wage: nil)
        @contractor_uuid = contractor_uuid
        @payment_method = payment_method
        @reimbursement = reimbursement
        @wage = wage
      end
    end
  end
end
