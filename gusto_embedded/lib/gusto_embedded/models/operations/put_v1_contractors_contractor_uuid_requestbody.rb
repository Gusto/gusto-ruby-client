# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Operations
  

    class PutV1ContractorsContractorUuidRequestBody < ::Crystalline::FieldAugmented
      extend T::Sig

      # The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for information on how to use this field.
      field :version, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('version') } }
      # The name of the contractor business. This attribute is required for `Business` contractors and will be ignored for `Individual` contractors.
      field :business_name, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('business_name') } }
      # The employer identification number of the contractor business.
      # This attribute is optional for `Business` contractors and will be ignored for `Individual` contractors.
      field :ein, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('ein') } }
      # The contractor’s email address.
      field :email, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('email') } }
      # The boolean flag indicating whether Gusto will file a new hire report for the contractor.
      # This attribute is optional for `Individual` contractors and will be ignored for `Business` contractors.
      field :file_new_hire_report, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('file_new_hire_report') } }
      # The contractor’s first name.
      # This attribute is required for `Individual` contractors and will be ignored for `Business` contractors.
      field :first_name, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('first_name') } }
      # The contractor’s hourly rate. This attribute is required if the wage_type is `Hourly`.
      field :hourly_rate, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('hourly_rate') } }
      # The status of the contractor. If the contractor's start date is in the future, updating this field to true means we are setting the start date to today.
      field :is_active, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('is_active') } }
      # The contractor’s last name.
      # This attribute is required for `Individual` contractors and will be ignored for `Business` contractors.
      field :last_name, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('last_name') } }
      # The contractor’s middle initial.
      # This attribute is optional for `Individual` contractors and will be ignored for `Business` contractors.
      field :middle_initial, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('middle_initial') } }
      # Whether the contractor or the payroll admin will complete onboarding in Gusto.
      # Self-onboarding is recommended so that contractors receive Gusto accounts.
      # If self_onboarding is true, then email is required.
      field :self_onboarding, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('self_onboarding') } }
      # This attribute is optional for `Individual` contractors and will be ignored for `Business` contractors.
      # Social security number is needed to file the annual 1099 tax form.
      field :ssn, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('ssn') } }
      # The day when the contractor will start working for the company.
      # 
      field :start_date, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('start_date') } }
      # The contractor type.
      field :type, T.nilable(::GustoEmbedded::Operations::PutV1ContractorsContractorUuidType), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('type'), 'decoder': Utils.enum_from_string(::GustoEmbedded::Operations::PutV1ContractorsContractorUuidType, true) } }
      # The contractor’s wage type.
      # 
      field :wage_type, T.nilable(::GustoEmbedded::Operations::PutV1ContractorsContractorUuidWageType), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('wage_type'), 'decoder': Utils.enum_from_string(::GustoEmbedded::Operations::PutV1ContractorsContractorUuidWageType, true) } }
      # State where the contractor will be conducting the majority of their work for the company.
      # This value is used when generating the new hire report.
      # This attribute is required for `Individual` contractors if `file_new_hire_report` is true and will be ignored for `Business` contractors.
      field :work_state, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('work_state') } }


      sig { params(version: ::String, business_name: T.nilable(::String), ein: T.nilable(::String), email: T.nilable(::String), file_new_hire_report: T.nilable(T::Boolean), first_name: T.nilable(::String), hourly_rate: T.nilable(::String), is_active: T.nilable(T::Boolean), last_name: T.nilable(::String), middle_initial: T.nilable(::String), self_onboarding: T.nilable(T::Boolean), ssn: T.nilable(::String), start_date: T.nilable(::String), type: T.nilable(::GustoEmbedded::Operations::PutV1ContractorsContractorUuidType), wage_type: T.nilable(::GustoEmbedded::Operations::PutV1ContractorsContractorUuidWageType), work_state: T.nilable(::String)).void }
      def initialize(version: nil, business_name: nil, ein: nil, email: nil, file_new_hire_report: nil, first_name: nil, hourly_rate: nil, is_active: nil, last_name: nil, middle_initial: nil, self_onboarding: nil, ssn: nil, start_date: nil, type: nil, wage_type: nil, work_state: nil)
        @version = version
        @business_name = business_name
        @ein = ein
        @email = email
        @file_new_hire_report = file_new_hire_report
        @first_name = first_name
        @hourly_rate = hourly_rate
        @is_active = is_active
        @last_name = last_name
        @middle_initial = middle_initial
        @self_onboarding = self_onboarding
        @ssn = ssn
        @start_date = start_date
        @type = type
        @wage_type = wage_type
        @work_state = work_state
      end
    end
  end
end
