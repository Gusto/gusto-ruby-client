# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Operations
  
    # successful
    class GetV1RecurringReimbursementsResponseBody < ::Crystalline::FieldAugmented
      extend T::Sig


      field :amount, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('amount') } }

      field :description, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('description') } }

      field :employee_uuid, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('employee_uuid') } }

      field :uuid, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('uuid') } }

      field :version, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('version') } }

      field :created_at, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('created_at') } }

      field :updated_at, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('updated_at') } }


      sig { params(amount: ::String, description: ::String, employee_uuid: ::String, uuid: ::String, version: ::String, created_at: T.nilable(::String), updated_at: T.nilable(::String)).void }
      def initialize(amount: nil, description: nil, employee_uuid: nil, uuid: nil, version: nil, created_at: nil, updated_at: nil)
        @amount = amount
        @description = description
        @employee_uuid = employee_uuid
        @uuid = uuid
        @version = version
        @created_at = created_at
        @updated_at = updated_at
      end
    end
  end
end
