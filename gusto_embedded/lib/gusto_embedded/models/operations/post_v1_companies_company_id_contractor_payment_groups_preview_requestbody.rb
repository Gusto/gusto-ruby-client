# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Operations
  

    class PostV1CompaniesCompanyIdContractorPaymentGroupsPreviewRequestBody < ::Crystalline::FieldAugmented
      extend T::Sig


      field :contractor_payments, T::Array[::GustoEmbedded::Operations::PostV1CompaniesCompanyIdContractorPaymentGroupsPreviewContractorPayments], { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('contractor_payments') } }
      # Date when payments should be processed
      field :check_date, T.nilable(::Date), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('check_date'), 'decoder': Utils.date_from_iso_format(true) } }


      sig { params(contractor_payments: T::Array[::GustoEmbedded::Operations::PostV1CompaniesCompanyIdContractorPaymentGroupsPreviewContractorPayments], check_date: T.nilable(::Date)).void }
      def initialize(contractor_payments: nil, check_date: nil)
        @contractor_payments = contractor_payments
        @check_date = check_date
      end
    end
  end
end
