# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Operations
  

    class PutV1RecurringReimbursementsRequestBody < ::Crystalline::FieldAugmented
      extend T::Sig

      # The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for information on how to use this field.
      field :version, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('version') } }
      # The dollar amount of the reimbursement
      field :amount, T.nilable(::Float), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('amount') } }
      # The description of the reimbursement
      field :description, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('description') } }


      sig { params(version: ::String, amount: T.nilable(::Float), description: T.nilable(::String)).void }
      def initialize(version: nil, amount: nil, description: nil)
        @version = version
        @amount = amount
        @description = description
      end
    end
  end
end
