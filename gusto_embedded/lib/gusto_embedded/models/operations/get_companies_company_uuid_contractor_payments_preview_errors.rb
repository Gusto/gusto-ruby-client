# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Operations
  

    class GetCompaniesCompanyUuidContractorPaymentsPreviewErrors < ::Crystalline::FieldAugmented
      extend T::Sig


      field :base, T.nilable(T::Array[::GustoEmbedded::Operations::GetCompaniesCompanyUuidContractorPaymentsPreviewBase]), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('base') } }

      field :check_date, T.nilable(T::Array[::GustoEmbedded::Operations::CheckDate]), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('check_date') } }


      sig { params(base: T.nilable(T::Array[::GustoEmbedded::Operations::GetCompaniesCompanyUuidContractorPaymentsPreviewBase]), check_date: T.nilable(T::Array[::GustoEmbedded::Operations::CheckDate])).void }
      def initialize(base: nil, check_date: nil)
        @base = base
        @check_date = check_date
      end
    end
  end
end
