# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Operations
  

    class SubmissionBlockers < ::Crystalline::FieldAugmented
      extend T::Sig

      # The type of submission_blocker that is blocking the payment.
      field :blocker_type, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('blocker_type') } }
      # The selected option to unblock the payment's submission_blocker.
      field :selected_option, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('selected_option') } }


      sig { params(blocker_type: T.nilable(::String), selected_option: T.nilable(::String)).void }
      def initialize(blocker_type: nil, selected_option: nil)
        @blocker_type = blocker_type
        @selected_option = selected_option
      end
    end
  end
end
