# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Operations
  

    class PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsDisbursements < ::Crystalline::FieldAugmented
      extend T::Sig

      # UUID of the employee
      field :employee_uuid, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('employee_uuid') } }
      # Payment method for the employee
      field :payment_method, T.nilable(::GustoEmbedded::Operations::PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('payment_method'), 'decoder': Utils.enum_from_string(::GustoEmbedded::Operations::PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod, true) } }
      # Status of the payment disbursement
      field :payment_status, T.nilable(::GustoEmbedded::Operations::PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('payment_status'), 'decoder': Utils.enum_from_string(::GustoEmbedded::Operations::PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus, true) } }


      sig { params(employee_uuid: ::String, payment_method: T.nilable(::GustoEmbedded::Operations::PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentMethod), payment_status: T.nilable(::GustoEmbedded::Operations::PatchV1CompaniesCompanyIdPayrollsIdPartnerDisbursementsPaymentStatus)).void }
      def initialize(employee_uuid: nil, payment_method: nil, payment_status: nil)
        @employee_uuid = employee_uuid
        @payment_method = payment_method
        @payment_status = payment_status
      end
    end
  end
end
