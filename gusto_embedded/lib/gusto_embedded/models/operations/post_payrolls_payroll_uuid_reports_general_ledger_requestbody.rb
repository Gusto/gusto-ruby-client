# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Operations
  

    class PostPayrollsPayrollUuidReportsGeneralLedgerRequestBody < ::Crystalline::FieldAugmented
      extend T::Sig

      # The breakdown of the report. Use 'default' for no split.
      field :aggregation, ::GustoEmbedded::Operations::Aggregation, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('aggregation'), 'decoder': Utils.enum_from_string(::GustoEmbedded::Operations::Aggregation, false) } }
      # The kind of integration set up for the company. Required when `aggregation` is 'integration'. Must be null if `aggregation` is not 'integration'.
      field :integration_type, T.nilable(::GustoEmbedded::Operations::IntegrationType), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('integration_type'), 'decoder': Utils.enum_from_string(::GustoEmbedded::Operations::IntegrationType, true) } }


      sig { params(aggregation: ::GustoEmbedded::Operations::Aggregation, integration_type: T.nilable(::GustoEmbedded::Operations::IntegrationType)).void }
      def initialize(aggregation: nil, integration_type: nil)
        @aggregation = aggregation
        @integration_type = integration_type
      end
    end
  end
end
