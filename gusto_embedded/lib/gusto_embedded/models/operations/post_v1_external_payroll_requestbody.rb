# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Operations
  

    class PostV1ExternalPayrollRequestBody < ::Crystalline::FieldAugmented
      extend T::Sig

      # External payroll's check date.
      field :check_date, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('check_date') } }
      # External payroll's pay period end date.
      field :payment_period_end_date, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('payment_period_end_date') } }
      # External payroll's pay period start date.
      field :payment_period_start_date, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('payment_period_start_date') } }


      sig { params(check_date: ::String, payment_period_end_date: ::String, payment_period_start_date: ::String).void }
      def initialize(check_date: nil, payment_period_end_date: nil, payment_period_start_date: nil)
        @check_date = check_date
        @payment_period_end_date = payment_period_end_date
        @payment_period_start_date = payment_period_start_date
      end
    end
  end
end
