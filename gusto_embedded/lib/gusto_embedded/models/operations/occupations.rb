# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Operations
  

    class Occupations < ::Crystalline::FieldAugmented
      extend T::Sig

      # Bureau of Labor Statistics (BLS) occupation code
      field :code, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('code') } }
      # Experience level for this occupation
      field :experience_level, ::GustoEmbedded::Operations::ExperienceLevel, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('experience_level'), 'decoder': Utils.enum_from_string(::GustoEmbedded::Operations::ExperienceLevel, false) } }
      # Percentage of time spent in this occupation (as decimal, e.g., 1.0 = 100%)
      field :time_percentage, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('time_percentage') } }
      # Whether this is the primary occupation
      field :primary, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('primary') } }


      sig { params(code: ::String, experience_level: ::GustoEmbedded::Operations::ExperienceLevel, time_percentage: ::String, primary: T.nilable(T::Boolean)).void }
      def initialize(code: nil, experience_level: nil, time_percentage: nil, primary: nil)
        @code = code
        @experience_level = experience_level
        @time_percentage = time_percentage
        @primary = primary
      end
    end
  end
end
