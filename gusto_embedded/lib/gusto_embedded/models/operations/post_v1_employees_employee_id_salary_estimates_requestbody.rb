# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Operations
  

    class PostV1EmployeesEmployeeIdSalaryEstimatesRequestBody < ::Crystalline::FieldAugmented
      extend T::Sig

      # Array of occupations. Time percentages must sum to 100%.
      field :occupations, T::Array[::GustoEmbedded::Operations::Occupations], { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('occupations') } }
      # The ZIP code for location-based salary calculations
      field :zip_code, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('zip_code') } }
      # The annual net revenue of the business (must be greater than 0)
      field :annual_net_revenue, T.nilable(::Float), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('annual_net_revenue') } }


      sig { params(occupations: T::Array[::GustoEmbedded::Operations::Occupations], zip_code: ::String, annual_net_revenue: T.nilable(::Float)).void }
      def initialize(occupations: nil, zip_code: nil, annual_net_revenue: nil)
        @occupations = occupations
        @zip_code = zip_code
        @annual_net_revenue = annual_net_revenue
      end
    end
  end
end
