# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Operations
  

    class RefreshAccessTokenRequestBody < ::Crystalline::FieldAugmented
      extend T::Sig

      # Your client id
      field :client_id, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('client_id') } }
      # Your client secret
      field :client_secret, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('client_secret') } }
      # this should be the literal string 'refresh_token'
      field :grant_type, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('grant_type') } }
      # The `refresh_token` being exchanged for an access token code
      field :refresh_token, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('refresh_token') } }
      # The redirect URI you set up via the Developer Portal
      field :redirect_uri, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('redirect_uri') } }


      sig { params(client_id: ::String, client_secret: ::String, grant_type: ::String, refresh_token: ::String, redirect_uri: T.nilable(::String)).void }
      def initialize(client_id: nil, client_secret: nil, grant_type: nil, refresh_token: nil, redirect_uri: nil)
        @client_id = client_id
        @client_secret = client_secret
        @grant_type = grant_type
        @refresh_token = refresh_token
        @redirect_uri = redirect_uri
      end
    end
  end
end
