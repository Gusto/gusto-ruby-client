# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Operations
  

    class PutV1ExternalPayrollRequestBody < ::Crystalline::FieldAugmented
      extend T::Sig


      field :external_payroll_items, T.nilable(T::Array[::GustoEmbedded::Operations::ExternalPayrollItems]), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('external_payroll_items') } }
      # Patch update external payroll items when set to true, otherwise it will overwrite the previous changes.
      field :replace_fields, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('replace_fields') } }


      sig { params(external_payroll_items: T.nilable(T::Array[::GustoEmbedded::Operations::ExternalPayrollItems]), replace_fields: T.nilable(T::Boolean)).void }
      def initialize(external_payroll_items: nil, replace_fields: nil)
        @external_payroll_items = external_payroll_items
        @replace_fields = replace_fields
      end
    end
  end
end
