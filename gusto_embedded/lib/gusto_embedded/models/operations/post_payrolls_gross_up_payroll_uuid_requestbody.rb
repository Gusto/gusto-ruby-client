# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Operations
  

    class PostPayrollsGrossUpPayrollUuidRequestBody < ::Crystalline::FieldAugmented
      extend T::Sig

      # Employee UUID
      field :employee_uuid, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('employee_uuid') } }
      # Employee net earnings
      field :net_pay, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('net_pay') } }


      sig { params(employee_uuid: ::String, net_pay: ::String).void }
      def initialize(employee_uuid: nil, net_pay: nil)
        @employee_uuid = employee_uuid
        @net_pay = net_pay
      end
    end
  end
end
