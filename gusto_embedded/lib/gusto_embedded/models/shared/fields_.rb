# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  

    class Fields < ::Crystalline::FieldAugmented
      extend T::Sig

      # The field's data type
      field :data_type, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('data_type') } }
      # Height of the field
      field :height, T.nilable(::Integer), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('height') } }
      # Unique identifier of the field
      field :key, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('key') } }
      # Page number of the field
      field :page_number, T.nilable(::Integer), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('page_number') } }
      # Whether the field is required
      field :required, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('required') } }
      # Auto-filled value of the field
      field :value, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('value') } }
      # Width of the field
      field :width, T.nilable(::Integer), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('width') } }
      # X-coordinate location of the field on the page
      field :x, T.nilable(::Integer), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('x') } }
      # Y-coordinate location of the field on the page
      field :y, T.nilable(::Integer), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('y') } }


      sig { params(data_type: T.nilable(::String), height: T.nilable(::Integer), key: T.nilable(::String), page_number: T.nilable(::Integer), required: T.nilable(T::Boolean), value: T.nilable(::String), width: T.nilable(::Integer), x: T.nilable(::Integer), y: T.nilable(::Integer)).void }
      def initialize(data_type: nil, height: nil, key: nil, page_number: nil, required: nil, value: nil, width: nil, x: nil, y: nil)
        @data_type = data_type
        @height = height
        @key = key
        @page_number = page_number
        @required = required
        @value = value
        @width = width
        @x = x
        @y = y
      end
    end
  end
end
