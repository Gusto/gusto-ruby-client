# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  

    class EmployeeStateTaxInputQuestionFormat < ::Crystalline::FieldAugmented
      extend T::Sig

      # Describes the type of question - Text, Number, Select, Currency, Date
      field :type, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('type') } }
      # For "Select" type questions, the allowed values and display labels.
      field :options, T.nilable(T::Array[::GustoEmbedded::Shared::Options]), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('options') } }


      sig { params(type: ::String, options: T.nilable(T::Array[::GustoEmbedded::Shared::Options])).void }
      def initialize(type: nil, options: nil)
        @type = type
        @options = options
      end
    end
  end
end
