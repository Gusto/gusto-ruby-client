# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  
    # The representation of a contribution exclusion for a company benefit.
    class ContributionExclusion < ::Crystalline::FieldAugmented
      extend T::Sig

      # The name of the contribution type.
      field :contribution_type, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('contribution_type') } }
      # The UUID of the contribution type.
      field :contribution_uuid, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('contribution_uuid') } }
      # Whether this contribution type is excluded from the benefit.
      field :excluded, T::Boolean, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('excluded') } }


      sig { params(contribution_type: ::String, contribution_uuid: ::String, excluded: T::Boolean).void }
      def initialize(contribution_type: nil, contribution_uuid: nil, excluded: nil)
        @contribution_type = contribution_type
        @contribution_uuid = contribution_uuid
        @excluded = excluded
      end
    end
  end
end
