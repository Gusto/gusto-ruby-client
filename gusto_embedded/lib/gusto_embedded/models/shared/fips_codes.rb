# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  

    class FipsCodes < ::Crystalline::FieldAugmented
      extend T::Sig

      # FIPS code for state or county
      field :code, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('code') } }
      # Name of county in the state for the corresponding FIPS code. When `null` the FIPS code applies state wide.
      field :county, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('county') } }


      sig { params(code: T.nilable(::String), county: T.nilable(::String)).void }
      def initialize(code: nil, county: nil)
        @code = code
        @county = county
      end
    end
  end
end
