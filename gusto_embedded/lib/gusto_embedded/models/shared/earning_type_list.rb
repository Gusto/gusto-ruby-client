# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  
    # Example response
    class EarningTypeList < ::Crystalline::FieldAugmented
      extend T::Sig

      # The custom earning types for the company.
      field :custom, T.nilable(T::Array[::GustoEmbedded::Shared::EarningType]), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('custom') } }
      # The default earning types for the company.
      field :default, T.nilable(T::Array[::GustoEmbedded::Shared::EarningType]), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('default') } }


      sig { params(custom: T.nilable(T::Array[::GustoEmbedded::Shared::EarningType]), default: T.nilable(T::Array[::GustoEmbedded::Shared::EarningType])).void }
      def initialize(custom: nil, default: nil)
        @custom = custom
        @default = default
      end
    end
  end
end
