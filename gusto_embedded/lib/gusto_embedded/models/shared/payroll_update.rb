# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  

    class PayrollUpdate < ::Crystalline::FieldAugmented
      extend T::Sig


      field :employee_compensations, T::Array[::GustoEmbedded::Shared::PayrollUpdateEmployeeCompensations], { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('employee_compensations') } }
      # Enable taxes to be withheld at the IRS's required rate of 22% for federal income taxes. State income taxes will be taxed at the state's supplemental tax rate. Otherwise, we'll sum the entirety of the employee's wages and withhold taxes on the entire amount at the rate for regular wages. Only relevant for off-cycle payrolls.
      field :fixed_withholding_rate, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('fixed_withholding_rate') } }
      # Block regular deductions and contributions for this payroll. Only relevant for off-cycle payrolls.
      field :skip_regular_deductions, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('skip_regular_deductions') } }
      # The payment schedule tax rate the payroll is based on. Only relevant for off-cycle payrolls.
      field :withholding_pay_period, T.nilable(::GustoEmbedded::Shared::WithholdingPayPeriod), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('withholding_pay_period'), 'decoder': Utils.enum_from_string(::GustoEmbedded::Shared::WithholdingPayPeriod, true) } }


      sig { params(employee_compensations: T::Array[::GustoEmbedded::Shared::PayrollUpdateEmployeeCompensations], fixed_withholding_rate: T.nilable(T::Boolean), skip_regular_deductions: T.nilable(T::Boolean), withholding_pay_period: T.nilable(::GustoEmbedded::Shared::WithholdingPayPeriod)).void }
      def initialize(employee_compensations: nil, fixed_withholding_rate: nil, skip_regular_deductions: nil, withholding_pay_period: nil)
        @employee_compensations = employee_compensations
        @fixed_withholding_rate = fixed_withholding_rate
        @skip_regular_deductions = skip_regular_deductions
        @withholding_pay_period = withholding_pay_period
      end
    end
  end
end
