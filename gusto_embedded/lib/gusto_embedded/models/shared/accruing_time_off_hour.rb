# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  
    # The representation of an unprocessed termination pay period.
    class AccruingTimeOffHour < ::Crystalline::FieldAugmented
      extend T::Sig

      # Hours accrued during this pay period.
      field :hours, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('hours') } }
      # A unique identifier of the time off policy.
      field :time_off_policy_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('time_off_policy_uuid') } }


      sig { params(hours: T.nilable(::String), time_off_policy_uuid: T.nilable(::String)).void }
      def initialize(hours: nil, time_off_policy_uuid: nil)
        @hours = hours
        @time_off_policy_uuid = time_off_policy_uuid
      end
    end
  end
end
