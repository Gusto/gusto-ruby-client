# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  
    # Example response
    class CreateReport < ::Crystalline::FieldAugmented
      extend T::Sig

      # Company UUID
      field :company_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('company_uuid') } }
      # Title of the report
      field :custom_name, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('custom_name') } }
      # File type
      field :file_type, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('file_type') } }
      # A unique identifier of the report request
      field :request_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('request_uuid') } }


      sig { params(company_uuid: T.nilable(::String), custom_name: T.nilable(::String), file_type: T.nilable(::String), request_uuid: T.nilable(::String)).void }
      def initialize(company_uuid: nil, custom_name: nil, file_type: nil, request_uuid: nil)
        @company_uuid = company_uuid
        @custom_name = custom_name
        @file_type = file_type
        @request_uuid = request_uuid
      end
    end
  end
end
