# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  

    class States < ::Crystalline::FieldAugmented
      extend T::Sig


      field :state, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('state') } }

      field :questions, T.nilable(T::Array[::GustoEmbedded::Shared::Questions]), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('questions') } }


      sig { params(state: ::String, questions: T.nilable(T::Array[::GustoEmbedded::Shared::Questions])).void }
      def initialize(state: nil, questions: nil)
        @state = state
        @questions = questions
      end
    end
  end
end
