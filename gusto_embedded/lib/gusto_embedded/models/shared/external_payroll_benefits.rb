# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  

    class ExternalPayrollBenefits < ::Crystalline::FieldAugmented
      extend T::Sig


      field :benefit_id, T.nilable(::Integer), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('benefit_id') } }

      field :company_contribution_amount, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('company_contribution_amount') } }

      field :employee_deduction_amount, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('employee_deduction_amount') } }


      sig { params(benefit_id: T.nilable(::Integer), company_contribution_amount: T.nilable(::String), employee_deduction_amount: T.nilable(::String)).void }
      def initialize(benefit_id: nil, company_contribution_amount: nil, employee_deduction_amount: nil)
        @benefit_id = benefit_id
        @company_contribution_amount = company_contribution_amount
        @employee_deduction_amount = employee_deduction_amount
      end
    end
  end
end
