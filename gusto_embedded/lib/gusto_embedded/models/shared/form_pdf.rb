# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  
    # Example response
    class FormPdf < ::Crystalline::FieldAugmented
      extend T::Sig

      # the UUID of the form
      field :uuid, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('uuid') } }
      # The content type of the associated document. Most forms are PDFs with a content type of `application/pdf`. Some tax file packages will be zip files (containing PDFs) with a content type of `application/zip`. This attribute will be `null` when the document has not been prepared.
      field :document_content_type, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('document_content_type') } }
      # the URL of the form
      field :document_url, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('document_url') } }


      sig { params(uuid: ::String, document_content_type: T.nilable(::String), document_url: T.nilable(::String)).void }
      def initialize(uuid: nil, document_content_type: nil, document_url: nil)
        @uuid = uuid
        @document_content_type = document_content_type
        @document_url = document_url
      end
    end
  end
end
