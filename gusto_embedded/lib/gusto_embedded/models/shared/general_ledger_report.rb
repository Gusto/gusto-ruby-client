# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  
    # Successful response for general ledger report generation
    class GeneralLedgerReport < ::Crystalline::FieldAugmented
      extend T::Sig

      # The breakdown level used for the report
      field :aggregation, T.nilable(::GustoEmbedded::Shared::Aggregation), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('aggregation'), 'decoder': Utils.enum_from_string(::GustoEmbedded::Shared::Aggregation, true) } }
      # The `integration_type` used for the report, if `aggregation` was 'integration.' Otherwise, this will be null.
      field :integration_type, T.nilable(::GustoEmbedded::Shared::IntegrationType), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('integration_type'), 'decoder': Utils.enum_from_string(::GustoEmbedded::Shared::IntegrationType, true) } }
      # The UUID of the payroll record for which the report was generated
      field :payroll_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('payroll_uuid') } }
      # UUID to use for polling the report status
      field :request_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('request_uuid') } }


      sig { params(aggregation: T.nilable(::GustoEmbedded::Shared::Aggregation), integration_type: T.nilable(::GustoEmbedded::Shared::IntegrationType), payroll_uuid: T.nilable(::String), request_uuid: T.nilable(::String)).void }
      def initialize(aggregation: nil, integration_type: nil, payroll_uuid: nil, request_uuid: nil)
        @aggregation = aggregation
        @integration_type = integration_type
        @payroll_uuid = payroll_uuid
        @request_uuid = request_uuid
      end
    end
  end
end
