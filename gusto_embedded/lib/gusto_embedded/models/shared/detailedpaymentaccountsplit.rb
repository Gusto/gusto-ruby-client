# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  
    # Details of a single payment split for a payment method.
    class DetailedPaymentAccountSplit < ::Crystalline::FieldAugmented
      extend T::Sig

      # The UUID of the bank account.
      field :bank_account_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('bank_account_uuid') } }
      # Ciphertext containing the full bank account number, which must be decrypted using a key provided by Gusto. Only visible with the appropriate `read:account_number` scope (e.g., `employee_payment_methods:read:account_number`).
      field :encrypted_account_number, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('encrypted_account_number') } }
      # The masked account number.
      field :hidden_account_number, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('hidden_account_number') } }
      # The name of the bank account.
      field :name, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('name') } }
      # The priority of the payment split.
      field :priority, T.nilable(::Integer), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('priority') } }
      # The amount for the split. If `split_by` is 'Amount', this is in cents (e.g., 500 for $5.00). If `split_by` is 'Percentage', this is the percentage value (e.g., 60 for 60%).
      field :split_amount, T.nilable(::Integer), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('split_amount') } }


      sig { params(bank_account_uuid: T.nilable(::String), encrypted_account_number: T.nilable(::String), hidden_account_number: T.nilable(::String), name: T.nilable(::String), priority: T.nilable(::Integer), split_amount: T.nilable(::Integer)).void }
      def initialize(bank_account_uuid: nil, encrypted_account_number: nil, hidden_account_number: nil, name: nil, priority: nil, split_amount: nil)
        @bank_account_uuid = bank_account_uuid
        @encrypted_account_number = encrypted_account_number
        @hidden_account_number = hidden_account_number
        @name = name
        @priority = priority
        @split_amount = split_amount
      end
    end
  end
end
