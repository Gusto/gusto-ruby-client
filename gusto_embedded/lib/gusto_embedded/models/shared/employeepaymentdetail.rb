# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  
    # Represents an employee's payment method details.
    class EmployeePaymentDetail < ::Crystalline::FieldAugmented
      extend T::Sig

      # The UUID of the employee.
      field :employee_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('employee_uuid') } }
      # The type of payment method.
      field :payment_method, T.nilable(::GustoEmbedded::Shared::EmployeePaymentDetailPaymentMethod), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('payment_method'), 'decoder': Utils.enum_from_string(::GustoEmbedded::Shared::EmployeePaymentDetailPaymentMethod, true) } }
      # How the payment is split. This field is applicable when `payment_method` is "Direct Deposit".
      field :split_by, T.nilable(::GustoEmbedded::Shared::SplitBy), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('split_by'), 'decoder': Utils.enum_from_string(::GustoEmbedded::Shared::SplitBy, true) } }
      # An array of payment splits. This field is applicable when `payment_method` is "Direct Deposit".
      field :splits, T.nilable(T::Array[::GustoEmbedded::Shared::DetailedPaymentAccountSplit]), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('splits') } }


      sig { params(employee_uuid: T.nilable(::String), payment_method: T.nilable(::GustoEmbedded::Shared::EmployeePaymentDetailPaymentMethod), split_by: T.nilable(::GustoEmbedded::Shared::SplitBy), splits: T.nilable(T::Array[::GustoEmbedded::Shared::DetailedPaymentAccountSplit])).void }
      def initialize(employee_uuid: nil, payment_method: nil, split_by: nil, splits: nil)
        @employee_uuid = employee_uuid
        @payment_method = payment_method
        @split_by = split_by
        @splits = splits
      end
    end
  end
end
