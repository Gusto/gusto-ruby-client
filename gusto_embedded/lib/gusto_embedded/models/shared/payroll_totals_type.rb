# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  
    # The subtotals for the payroll.
    class PayrollTotalsType < ::Crystalline::FieldAugmented
      extend T::Sig

      # The total additional earnings amount for the payroll.
      field :additional_earnings, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('additional_earnings') } }
      # The total amount of company contributed benefits for the payroll.
      field :benefits, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('benefits') } }
      # The total check amount for the payroll.
      field :check_amount, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('check_amount') } }
      # The total child support debit for the payroll.
      field :child_support_debit, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('child_support_debit') } }
      # The total company debit for the payroll.
      field :company_debit, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('company_debit') } }
      # The total amount of payroll taxes deferred for the payroll, such as allowed by the CARES act.
      field :deferred_payroll_taxes, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('deferred_payroll_taxes') } }
      # The total amount of employee deducted benefits for the payroll.
      field :employee_benefits_deductions, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('employee_benefits_deductions') } }
      # The total employee bonuses amount for the payroll.
      field :employee_bonuses, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('employee_bonuses') } }
      # The total employee cash tips amount for the payroll.
      field :employee_cash_tips, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('employee_cash_tips') } }
      # The total employee commissions amount for the payroll.
      field :employee_commissions, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('employee_commissions') } }
      # The total employee paycheck tips amount for the payroll.
      field :employee_paycheck_tips, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('employee_paycheck_tips') } }
      # The total amount of employee paid taxes for the payroll.
      field :employee_taxes, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('employee_taxes') } }
      # The total amount of employer paid taxes for the payroll.
      field :employer_taxes, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('employer_taxes') } }
      # The gross pay amount for the payroll.
      field :gross_pay, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('gross_pay') } }
      # The total amount of imputed pay for the payroll.
      field :imputed_pay, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('imputed_pay') } }
      # The net pay amount for the payroll.
      field :net_pay, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('net_pay') } }
      # The total company net pay for the payroll.
      field :net_pay_debit, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('net_pay_debit') } }
      # The total amount of deductions for the payroll.
      field :other_deductions, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('other_deductions') } }
      # The total owner's draw for the payroll.
      field :owners_draw, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('owners_draw') } }
      # The total reimbursement debit for the payroll.
      field :reimbursement_debit, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('reimbursement_debit') } }
      # The total reimbursements for the payroll.
      field :reimbursements, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('reimbursements') } }
      # The total tax debit for the payroll.
      field :tax_debit, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('tax_debit') } }


      sig { params(additional_earnings: T.nilable(::String), benefits: T.nilable(::String), check_amount: T.nilable(::String), child_support_debit: T.nilable(::String), company_debit: T.nilable(::String), deferred_payroll_taxes: T.nilable(::String), employee_benefits_deductions: T.nilable(::String), employee_bonuses: T.nilable(::String), employee_cash_tips: T.nilable(::String), employee_commissions: T.nilable(::String), employee_paycheck_tips: T.nilable(::String), employee_taxes: T.nilable(::String), employer_taxes: T.nilable(::String), gross_pay: T.nilable(::String), imputed_pay: T.nilable(::String), net_pay: T.nilable(::String), net_pay_debit: T.nilable(::String), other_deductions: T.nilable(::String), owners_draw: T.nilable(::String), reimbursement_debit: T.nilable(::String), reimbursements: T.nilable(::String), tax_debit: T.nilable(::String)).void }
      def initialize(additional_earnings: nil, benefits: nil, check_amount: nil, child_support_debit: nil, company_debit: nil, deferred_payroll_taxes: nil, employee_benefits_deductions: nil, employee_bonuses: nil, employee_cash_tips: nil, employee_commissions: nil, employee_paycheck_tips: nil, employee_taxes: nil, employer_taxes: nil, gross_pay: nil, imputed_pay: nil, net_pay: nil, net_pay_debit: nil, other_deductions: nil, owners_draw: nil, reimbursement_debit: nil, reimbursements: nil, tax_debit: nil)
        @additional_earnings = additional_earnings
        @benefits = benefits
        @check_amount = check_amount
        @child_support_debit = child_support_debit
        @company_debit = company_debit
        @deferred_payroll_taxes = deferred_payroll_taxes
        @employee_benefits_deductions = employee_benefits_deductions
        @employee_bonuses = employee_bonuses
        @employee_cash_tips = employee_cash_tips
        @employee_commissions = employee_commissions
        @employee_paycheck_tips = employee_paycheck_tips
        @employee_taxes = employee_taxes
        @employer_taxes = employer_taxes
        @gross_pay = gross_pay
        @imputed_pay = imputed_pay
        @net_pay = net_pay
        @net_pay_debit = net_pay_debit
        @other_deductions = other_deductions
        @owners_draw = owners_draw
        @reimbursement_debit = reimbursement_debit
        @reimbursements = reimbursements
        @tax_debit = tax_debit
      end
    end
  end
end
