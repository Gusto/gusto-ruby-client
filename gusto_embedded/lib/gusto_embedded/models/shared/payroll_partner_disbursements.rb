# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  
    # Partner disbursements for a payroll
    class PayrollPartnerDisbursements < ::Crystalline::FieldAugmented
      extend T::Sig

      # List of disbursements for the payroll
      field :disbursements, T.nilable(T::Array[::GustoEmbedded::Shared::PayrollPartnerDisbursementsDisbursements]), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('disbursements') } }
      # The UUID of the payroll
      field :payroll_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('payroll_uuid') } }


      sig { params(disbursements: T.nilable(T::Array[::GustoEmbedded::Shared::PayrollPartnerDisbursementsDisbursements]), payroll_uuid: T.nilable(::String)).void }
      def initialize(disbursements: nil, payroll_uuid: nil)
        @disbursements = disbursements
        @payroll_uuid = payroll_uuid
      end
    end
  end
end
