# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  

    class ApplicableIf < ::Crystalline::FieldAugmented
      extend T::Sig

      # An identifier for an individual requirement. Uniqueness is guaranteed within a requirement set.
      field :key, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('key') } }
      # The required value of the requirement identified by `key`
      field :value, T.nilable(::Object), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('value') } }


      sig { params(key: T.nilable(::String), value: T.nilable(::Object)).void }
      def initialize(key: nil, value: nil)
        @key = key
        @value = value
      end
    end
  end
end
