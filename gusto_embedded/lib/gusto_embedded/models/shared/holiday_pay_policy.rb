# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  
    # Representation of a Holiday Pay Policy
    class HolidayPayPolicy < ::Crystalline::FieldAugmented
      extend T::Sig

      # A unique identifier for the company owning the holiday pay policy
      field :company_uuid, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('company_uuid') } }
      # List of employee uuids under a time off policy
      field :employees, T::Array[::GustoEmbedded::Shared::HolidayPayPolicyEmployees], { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('employees') } }
      # List of the eleven supported federal holidays and their details
      field :federal_holidays, T::Array[::GustoEmbedded::Shared::FederalHolidays], { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('federal_holidays') } }
      # The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer) for information on how to use this field.
      field :version, ::String, { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('version') } }


      sig { params(company_uuid: ::String, employees: T::Array[::GustoEmbedded::Shared::HolidayPayPolicyEmployees], federal_holidays: T::Array[::GustoEmbedded::Shared::FederalHolidays], version: ::String).void }
      def initialize(company_uuid: nil, employees: nil, federal_holidays: nil, version: nil)
        @company_uuid = company_uuid
        @employees = employees
        @federal_holidays = federal_holidays
        @version = version
      end
    end
  end
end
