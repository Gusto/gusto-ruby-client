# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  

    class PayrollProcessingRequest < ::Crystalline::FieldAugmented
      extend T::Sig

      # Errors that occurred during async payroll processing
      field :errors, T.nilable(T::Array[::GustoEmbedded::Shared::EntityErrorObject]), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('errors') } }
      # The status of the payroll processing request
      field :status, T.nilable(::GustoEmbedded::Shared::PayrollProcessingRequestStatus), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('status'), 'decoder': Utils.enum_from_string(::GustoEmbedded::Shared::PayrollProcessingRequestStatus, true) } }


      sig { params(errors: T.nilable(T::Array[::GustoEmbedded::Shared::EntityErrorObject]), status: T.nilable(::GustoEmbedded::Shared::PayrollProcessingRequestStatus)).void }
      def initialize(errors: nil, status: nil)
        @errors = errors
        @status = status
      end
    end
  end
end
