# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  

    class Earnings < ::Crystalline::FieldAugmented
      extend T::Sig


      field :amount, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('amount') } }

      field :earning_id, T.nilable(::Integer), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('earning_id') } }

      field :earning_type, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('earning_type') } }

      field :hours, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('hours') } }


      sig { params(amount: T.nilable(::String), earning_id: T.nilable(::Integer), earning_type: T.nilable(::String), hours: T.nilable(::String)).void }
      def initialize(amount: nil, earning_id: nil, earning_type: nil, hours: nil)
        @amount = amount
        @earning_id = earning_id
        @earning_type = earning_type
        @hours = hours
      end
    end
  end
end
