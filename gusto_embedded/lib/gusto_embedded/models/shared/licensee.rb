# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  
    # The licensed payroll processor
    class Licensee < ::Crystalline::FieldAugmented
      extend T::Sig

      # Always the fixed string "525 20th St"
      field :address, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('address') } }
      # Always the fixed string "San Francisco"
      field :city, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('city') } }
      # Always the fixed string "Gusto, Zenpayroll Inc."
      field :name, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('name') } }
      # Always the fixed string "4157778888"
      field :phone_number, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('phone_number') } }
      # Always the fixed string "94107"
      field :postal_code, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('postal_code') } }
      # Always the fixed string "CA"
      field :state, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('state') } }


      sig { params(address: T.nilable(::String), city: T.nilable(::String), name: T.nilable(::String), phone_number: T.nilable(::String), postal_code: T.nilable(::String), state: T.nilable(::String)).void }
      def initialize(address: nil, city: nil, name: nil, phone_number: nil, postal_code: nil, state: nil)
        @address = address
        @city = city
        @name = name
        @phone_number = phone_number
        @postal_code = postal_code
        @state = state
      end
    end
  end
end
