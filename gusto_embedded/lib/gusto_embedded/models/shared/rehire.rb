# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module GustoEmbedded
  module Shared
  
    # Example response
    class Rehire < ::Crystalline::FieldAugmented
      extend T::Sig

      # Whether the employee's rehire has gone into effect.
      field :active, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('active') } }
      # The day when the employee returns to work.
      field :effective_date, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('effective_date') } }
      # The UUID of the employee.
      field :employee_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('employee_uuid') } }
      # The employee's employment status. Supplying an invalid option will set the employment_status to *not_set*.
      field :employment_status, T.nilable(::GustoEmbedded::Shared::RehireEmploymentStatus), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('employment_status'), 'decoder': Utils.enum_from_string(::GustoEmbedded::Shared::RehireEmploymentStatus, true) } }
      # The boolean flag indicating whether Gusto will file a new hire report for the employee.
      field :file_new_hire_report, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('file_new_hire_report') } }
      # Whether the employee is a two percent shareholder of the company. This field only applies to companies with an S-Corp entity type.
      field :two_percent_shareholder, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('two_percent_shareholder') } }
      # The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer) for information on how to use this field.
      field :version, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('version') } }
      # The uuid of the employee's work location.
      field :work_location_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::GustoEmbedded::Utils.field_name('work_location_uuid') } }


      sig { params(active: T.nilable(T::Boolean), effective_date: T.nilable(::String), employee_uuid: T.nilable(::String), employment_status: T.nilable(::GustoEmbedded::Shared::RehireEmploymentStatus), file_new_hire_report: T.nilable(T::Boolean), two_percent_shareholder: T.nilable(T::Boolean), version: T.nilable(::String), work_location_uuid: T.nilable(::String)).void }
      def initialize(active: nil, effective_date: nil, employee_uuid: nil, employment_status: nil, file_new_hire_report: nil, two_percent_shareholder: nil, version: nil, work_location_uuid: nil)
        @active = active
        @effective_date = effective_date
        @employee_uuid = employee_uuid
        @employment_status = employment_status
        @file_new_hire_report = file_new_hire_report
        @two_percent_shareholder = two_percent_shareholder
        @version = version
        @work_location_uuid = work_location_uuid
      end
    end
  end
end
