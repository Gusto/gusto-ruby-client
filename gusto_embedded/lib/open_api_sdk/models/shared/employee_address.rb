# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class EmployeeAddress < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The status of the location. Inactive locations have been deleted, but may still have historical data associated with them.
      field :active, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('active') } }

      field :city, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('city') } }

      field :country, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('country') } }
      # Determines if home taxes should be withheld and paid for employee.
      field :courtesy_withholding, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('courtesy_withholding') } }
      # The date the employee started living at the address.
      field :effective_date, T.nilable(::Date), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('effective_date'), 'decoder': Utils.date_from_iso_format(true) } }
      # The UUID of the employee
      field :employee_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('employee_uuid') } }

      field :state, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('state') } }

      field :street_1, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('street_1') } }

      field :street_2, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('street_2') } }
      # The UUID of the employee address
      field :uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('uuid') } }
      # The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for information on how to use this field.
      field :version, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('version') } }

      field :zip, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('zip') } }


      sig { params(active: T.nilable(T::Boolean), city: T.nilable(::String), country: T.nilable(::String), courtesy_withholding: T.nilable(T::Boolean), effective_date: T.nilable(::Date), employee_uuid: T.nilable(::String), state: T.nilable(::String), street_1: T.nilable(::String), street_2: T.nilable(::String), uuid: T.nilable(::String), version: T.nilable(::String), zip: T.nilable(::String)).void }
      def initialize(active: nil, city: nil, country: nil, courtesy_withholding: nil, effective_date: nil, employee_uuid: nil, state: nil, street_1: nil, street_2: nil, uuid: nil, version: nil, zip: nil)
        @active = active
        @city = city
        @country = country
        @courtesy_withholding = courtesy_withholding
        @effective_date = effective_date
        @employee_uuid = employee_uuid
        @state = state
        @street_1 = street_1
        @street_2 = street_2
        @uuid = uuid
        @version = version
        @zip = zip
      end
    end
  end
end
