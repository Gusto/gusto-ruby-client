# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class ContractorPayments < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The bonus amount in the payment.
      field :bonus, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('bonus') } }
      # The business name of the contractor. Applies when `contractor_type` is `Business`.
      field :contractor_business_name, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('contractor_business_name') } }
      # The first name of the contractor. Applies when `contractor_type` is `Individual`.
      field :contractor_first_name, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('contractor_first_name') } }
      # The last name of the contractor.  Applies when `contractor_type` is `Individual`.
      field :contractor_last_name, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('contractor_last_name') } }
      # The type of contractor.
      # 
      # `Individual` `Business`
      field :contractor_type, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('contractor_type') } }
      # The UUID of the contractor.
      field :contractor_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('contractor_uuid') } }
      # The payment method.
      # 
      # `Direct Deposit` `Check` `Historical Payment` `Correction Payment`
      field :payment_method, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('payment_method') } }
      # The reimbursement amount in the payment.
      field :reimbursement, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('reimbursement') } }
      # The fixed wage of the payment, regardless of hours worked.
      field :wage, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('wage') } }


      sig { params(bonus: T.nilable(::String), contractor_business_name: T.nilable(::String), contractor_first_name: T.nilable(::String), contractor_last_name: T.nilable(::String), contractor_type: T.nilable(::String), contractor_uuid: T.nilable(::String), payment_method: T.nilable(::String), reimbursement: T.nilable(::String), wage: T.nilable(::String)).void }
      def initialize(bonus: nil, contractor_business_name: nil, contractor_first_name: nil, contractor_last_name: nil, contractor_type: nil, contractor_uuid: nil, payment_method: nil, reimbursement: nil, wage: nil)
        @bonus = bonus
        @contractor_business_name = contractor_business_name
        @contractor_first_name = contractor_first_name
        @contractor_last_name = contractor_last_name
        @contractor_type = contractor_type
        @contractor_uuid = contractor_uuid
        @payment_method = payment_method
        @reimbursement = reimbursement
        @wage = wage
      end
    end
  end
end
