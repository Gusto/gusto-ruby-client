# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class ContractorPaymentGroupMinimalTotals < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The total amount for the group of contractor payments.
      field :amount, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('amount') } }
      # The total debit amount for the group of contractor payments. Sum of wage & reimbursement amount.
      field :debit_amount, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('debit_amount') } }
      # The total reimbursement amount for the group of contractor payments.
      field :reimbursement_amount, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('reimbursement_amount') } }
      # The total wage amount for the group of contractor payments.
      field :wage_amount, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('wage_amount') } }


      sig { params(amount: T.nilable(::String), debit_amount: T.nilable(::String), reimbursement_amount: T.nilable(::String), wage_amount: T.nilable(::String)).void }
      def initialize(amount: nil, debit_amount: nil, reimbursement_amount: nil, wage_amount: nil)
        @amount = amount
        @debit_amount = debit_amount
        @reimbursement_amount = reimbursement_amount
        @wage_amount = wage_amount
      end
    end
  end
end
