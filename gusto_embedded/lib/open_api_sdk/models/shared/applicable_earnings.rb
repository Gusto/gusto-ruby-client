# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class ApplicableEarnings < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :category, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('category') } }

      field :earning_id, T.nilable(::Float), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('earning_id') } }

      field :earning_type, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('earning_type') } }

      field :input_type, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('input_type') } }

      field :name, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('name') } }


      sig { params(category: T.nilable(::String), earning_id: T.nilable(::Float), earning_type: T.nilable(::String), input_type: T.nilable(::String), name: T.nilable(::String)).void }
      def initialize(category: nil, earning_id: nil, earning_type: nil, input_type: nil, name: nil)
        @category = category
        @earning_id = earning_id
        @earning_type = earning_type
        @input_type = input_type
        @name = name
      end
    end
  end
end
