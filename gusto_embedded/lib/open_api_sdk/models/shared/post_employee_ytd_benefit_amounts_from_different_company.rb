# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class PostEmployeeYtdBenefitAmountsFromDifferentCompany < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The tax year for which this amount applies.
      field :tax_year, ::Float, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('tax_year') } }
      # The year-to-date company contribution made outside the current company.
      field :ytd_company_contribution_amount, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('ytd_company_contribution_amount') } }
      # The year-to-date employee deduction made outside the current company.
      field :ytd_employee_deduction_amount, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('ytd_employee_deduction_amount') } }
      # The benefit type supported by Gusto.
      field :benefit_type, T.nilable(::Float), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('benefit_type') } }


      sig { params(tax_year: ::Float, ytd_company_contribution_amount: ::String, ytd_employee_deduction_amount: ::String, benefit_type: T.nilable(::Float)).void }
      def initialize(tax_year: nil, ytd_company_contribution_amount: nil, ytd_employee_deduction_amount: nil, benefit_type: nil)
        @tax_year = tax_year
        @ytd_company_contribution_amount = ytd_company_contribution_amount
        @ytd_employee_deduction_amount = ytd_employee_deduction_amount
        @benefit_type = benefit_type
      end
    end
  end
end
