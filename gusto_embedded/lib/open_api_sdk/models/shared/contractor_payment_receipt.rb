# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  
    # Example response
    class ContractorPaymentReceipt < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # A unique identifier of the company making the contractor payment.
      field :company_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('company_uuid') } }
      # A unique identifier of the contractor payment receipt.
      field :contractor_payment_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('contractor_payment_uuid') } }
      # An array of contractor payments for this contractor payment.
      field :contractor_payments, T.nilable(T::Array[::OpenApiSDK::Shared::ContractorPayments]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('contractor_payments') } }
      # The debit date for the contractor payment.
      field :debit_date, T.nilable(::Date), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('debit_date'), 'decoder': Utils.date_from_iso_format(true) } }
      # URL for information related to right to liability of licensee. Always the fixed string "https://gusto.com/about/licenses"
      field :liability_of_licensee, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('liability_of_licensee') } }
      # Always the fixed string "Your payroll provider partners with Gusto Inc. for payments processing. Gusto Inc. is a licensed money transmitter. Learn more on our license page."
      field :license, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('license') } }
      # URL for the license information for the licensed payroll processor. Always the fixed string "https://gusto.com/about/licenses"
      field :license_uri, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('license_uri') } }
      # The licensed payroll processor
      field :licensee, T.nilable(::OpenApiSDK::Shared::ContractorPaymentReceiptLicensee), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('licensee') } }
      # The individual or company name of the contractor receiving payment.
      field :name_of_recipient, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('name_of_recipient') } }
      # The name of the company making the contractor payment.
      field :name_of_sender, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('name_of_sender') } }
      # URL for information related to right to refund. Always the fixed string "https://gusto.com/about/licenses"
      field :right_to_refund, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('right_to_refund') } }
      # The subtotals for the contractor payment.
      field :totals, T.nilable(::OpenApiSDK::Shared::ContractorPaymentReceiptTotals), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('totals') } }


      sig { params(company_uuid: T.nilable(::String), contractor_payment_uuid: T.nilable(::String), contractor_payments: T.nilable(T::Array[::OpenApiSDK::Shared::ContractorPayments]), debit_date: T.nilable(::Date), liability_of_licensee: T.nilable(::String), license: T.nilable(::String), license_uri: T.nilable(::String), licensee: T.nilable(::OpenApiSDK::Shared::ContractorPaymentReceiptLicensee), name_of_recipient: T.nilable(::String), name_of_sender: T.nilable(::String), right_to_refund: T.nilable(::String), totals: T.nilable(::OpenApiSDK::Shared::ContractorPaymentReceiptTotals)).void }
      def initialize(company_uuid: nil, contractor_payment_uuid: nil, contractor_payments: nil, debit_date: nil, liability_of_licensee: nil, license: nil, license_uri: nil, licensee: nil, name_of_recipient: nil, name_of_sender: nil, right_to_refund: nil, totals: nil)
        @company_uuid = company_uuid
        @contractor_payment_uuid = contractor_payment_uuid
        @contractor_payments = contractor_payments
        @debit_date = debit_date
        @liability_of_licensee = liability_of_licensee
        @license = license
        @license_uri = license_uri
        @licensee = licensee
        @name_of_recipient = name_of_recipient
        @name_of_sender = name_of_sender
        @right_to_refund = right_to_refund
        @totals = totals
      end
    end
  end
end
