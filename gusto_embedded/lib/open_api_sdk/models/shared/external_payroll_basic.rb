# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  
    # The representation of an external payroll with minimal information.
    class ExternalPayrollBasic < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The UUID of the external payroll.
      field :uuid, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('uuid') } }
      # External payroll's check date.
      field :check_date, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('check_date') } }
      # The UUID of the company.
      field :company_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('company_uuid') } }
      # External payroll's pay period end date.
      field :payment_period_end_date, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('payment_period_end_date') } }
      # External payroll's pay period start date.
      field :payment_period_start_date, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('payment_period_start_date') } }
      # The status of the external payroll. The status will be `unprocessed` when the external payroll is created and transition to `processed` once tax liabilities are entered and finalized.  Once in the `processed` status all actions that can edit an external payroll will be disabled.
      field :status, T.nilable(::OpenApiSDK::Shared::ExternalPayrollBasicStatus), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('status'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Shared::ExternalPayrollBasicStatus, true) } }


      sig { params(uuid: ::String, check_date: T.nilable(::String), company_uuid: T.nilable(::String), payment_period_end_date: T.nilable(::String), payment_period_start_date: T.nilable(::String), status: T.nilable(::OpenApiSDK::Shared::ExternalPayrollBasicStatus)).void }
      def initialize(uuid: nil, check_date: nil, company_uuid: nil, payment_period_end_date: nil, payment_period_start_date: nil, status: nil)
        @uuid = uuid
        @check_date = check_date
        @company_uuid = company_uuid
        @payment_period_end_date = payment_period_end_date
        @payment_period_start_date = payment_period_start_date
        @status = status
      end
    end
  end
end
