# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  
    # Representation of a Time Off Activity
    class TimeOffActivity < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The time off balance at the time of the activity
      field :balance, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('balance') } }
      # The amount the time off balance changed as a result of the activity
      field :balance_change, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('balance_change') } }
      # The datetime of the time off activity
      field :effective_time, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('effective_time') } }
      # A description for the time off event/activity
      field :event_description, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('event_description') } }
      # The type of the time off event/activity
      field :event_type, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('event_type') } }
      # The name of the time off policy for this activity
      field :policy_name, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('policy_name') } }
      # unique identifier of a time off policy
      field :policy_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('policy_uuid') } }
      # Type of the time off activity
      field :time_off_type, T.nilable(::OpenApiSDK::Shared::TimeOffType), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('time_off_type'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Shared::TimeOffType, true) } }


      sig { params(balance: T.nilable(::String), balance_change: T.nilable(::String), effective_time: T.nilable(::String), event_description: T.nilable(::String), event_type: T.nilable(::String), policy_name: T.nilable(::String), policy_uuid: T.nilable(::String), time_off_type: T.nilable(::OpenApiSDK::Shared::TimeOffType)).void }
      def initialize(balance: nil, balance_change: nil, effective_time: nil, event_description: nil, event_type: nil, policy_name: nil, policy_uuid: nil, time_off_type: nil)
        @balance = balance
        @balance_change = balance_change
        @effective_time = effective_time
        @event_description = event_description
        @event_type = event_type
        @policy_name = policy_name
        @policy_uuid = policy_uuid
        @time_off_type = time_off_type
      end
    end
  end
end
