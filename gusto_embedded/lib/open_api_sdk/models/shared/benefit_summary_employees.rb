# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class BenefitSummaryEmployees < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The sum of company contribution for this employee given the period of time and the benefit type.
      field :benefit_contribution, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('benefit_contribution') } }
      # The sum of employee benefit deduction for this employee given the period of time and the benefit type.
      field :benefit_deduction, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('benefit_deduction') } }
      # The sum of company contribution for this employee given the period of time and the specific company benefit.
      field :company_benefit_contribution, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('company_benefit_contribution') } }
      # The sum of employee deduction for this employee given the period of time and the specific company benefit.
      field :company_benefit_deduction, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('company_benefit_deduction') } }
      # Gross pay for this employee given the period of time.
      field :gross_pay, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('gross_pay') } }
      # Total imputed pay for this employee given the period of time (not scoped to a benefit type).
      field :imputed_pay, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('imputed_pay') } }

      field :payroll_benefits, T.nilable(::OpenApiSDK::Shared::PayrollBenefits), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('payroll_benefits') } }
      # The UUID of the employee
      field :uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('uuid') } }


      sig { params(benefit_contribution: T.nilable(::String), benefit_deduction: T.nilable(::String), company_benefit_contribution: T.nilable(::String), company_benefit_deduction: T.nilable(::String), gross_pay: T.nilable(::String), imputed_pay: T.nilable(::String), payroll_benefits: T.nilable(::OpenApiSDK::Shared::PayrollBenefits), uuid: T.nilable(::String)).void }
      def initialize(benefit_contribution: nil, benefit_deduction: nil, company_benefit_contribution: nil, company_benefit_deduction: nil, gross_pay: nil, imputed_pay: nil, payroll_benefits: nil, uuid: nil)
        @benefit_contribution = benefit_contribution
        @benefit_deduction = benefit_deduction
        @company_benefit_contribution = company_benefit_contribution
        @company_benefit_deduction = company_benefit_deduction
        @gross_pay = gross_pay
        @imputed_pay = imputed_pay
        @payroll_benefits = payroll_benefits
        @uuid = uuid
      end
    end
  end
end
