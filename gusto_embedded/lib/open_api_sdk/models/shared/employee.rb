# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  
    # The representation of an employee in Gusto.
    class Employee < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :first_name, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('first_name') } }

      field :last_name, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('last_name') } }
      # The UUID of the employee in Gusto.
      field :uuid, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('uuid') } }
      # The UUID of the company the employee is employed by.
      field :company_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('company_uuid') } }
      # The current employment status of the employee. Full-time employees work 30+ hours per week. Part-time employees are split into two groups: those that work 20-29 hours a week, and those that work under 20 hours a week. Variable employees have hours that vary each week. Seasonal employees are hired for 6 months of the year or less.
      field :current_employment_status, T.nilable(::OpenApiSDK::Shared::CurrentEmploymentStatus), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('current_employment_status'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Shared::CurrentEmploymentStatus, true) } }
      # Custom fields are only included for the employee if the include param has the custom_fields value set
      field :custom_fields, T.nilable(T::Array[::OpenApiSDK::Shared::EmployeeCustomField]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('custom_fields') } }

      field :date_of_birth, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('date_of_birth') } }
      # The employee's department in the company.
      field :department, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('department') } }

      field :eligible_paid_time_off, T.nilable(T::Array[::OpenApiSDK::Shared::PaidTimeOff]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('eligible_paid_time_off') } }
      # The personal email address of the employee. This is provided to support syncing users between our system and yours. You may not use this email address for any other purpose (e.g. marketing).
      field :email, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('email') } }

      field :garnishments, T.nilable(T::Array[::OpenApiSDK::Shared::Garnishment]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('garnishments') } }
      # Indicates whether the employee has an SSN in Gusto.
      field :has_ssn, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('has_ssn') } }

      field :jobs, T.nilable(T::Array[::OpenApiSDK::Shared::Job]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('jobs') } }
      # The UUID of the employee's manager.
      field :manager_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('manager_uuid') } }

      field :middle_initial, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('middle_initial') } }
      # Whether the employee has completed onboarding.
      field :onboarded, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('onboarded') } }
      # Configuration for an employee onboarding documents during onboarding
      field :onboarding_documents_config, T.nilable(::OpenApiSDK::Shared::OnboardingDocumentsConfig), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('onboarding_documents_config') } }
      # The current onboarding status of the employee
      field :onboarding_status, T.nilable(::OpenApiSDK::Shared::OnboardingStatus), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('onboarding_status'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Shared::OnboardingStatus, true) } }
      # The employee's payment method
      field :payment_method, T.nilable(::OpenApiSDK::Shared::PaymentMethod), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('payment_method'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Shared::PaymentMethod, true) } }

      field :phone, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('phone') } }

      field :preferred_first_name, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('preferred_first_name') } }
      # Deprecated. This field always returns an empty string.
      field :ssn, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('ssn') } }
      # Whether the employee is terminated.
      field :terminated, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('terminated') } }

      field :terminations, T.nilable(T::Array[::OpenApiSDK::Shared::Termination]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('terminations') } }
      # Whether the employee is a two percent shareholder of the company. This field only applies to companies with an S-Corp entity type.
      field :two_percent_shareholder, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('two_percent_shareholder') } }
      # The current version of the employee. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for information on how to use this field.
      field :version, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('version') } }
      # The work email address of the employee. This is provided to support syncing users between our system and yours. You may not use this email address for any other purpose (e.g. marketing).
      field :work_email, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('work_email') } }


      sig { params(first_name: ::String, last_name: ::String, uuid: ::String, company_uuid: T.nilable(::String), current_employment_status: T.nilable(::OpenApiSDK::Shared::CurrentEmploymentStatus), custom_fields: T.nilable(T::Array[::OpenApiSDK::Shared::EmployeeCustomField]), date_of_birth: T.nilable(::String), department: T.nilable(::String), eligible_paid_time_off: T.nilable(T::Array[::OpenApiSDK::Shared::PaidTimeOff]), email: T.nilable(::String), garnishments: T.nilable(T::Array[::OpenApiSDK::Shared::Garnishment]), has_ssn: T.nilable(T::Boolean), jobs: T.nilable(T::Array[::OpenApiSDK::Shared::Job]), manager_uuid: T.nilable(::String), middle_initial: T.nilable(::String), onboarded: T.nilable(T::Boolean), onboarding_documents_config: T.nilable(::OpenApiSDK::Shared::OnboardingDocumentsConfig), onboarding_status: T.nilable(::OpenApiSDK::Shared::OnboardingStatus), payment_method: T.nilable(::OpenApiSDK::Shared::PaymentMethod), phone: T.nilable(::String), preferred_first_name: T.nilable(::String), ssn: T.nilable(::String), terminated: T.nilable(T::Boolean), terminations: T.nilable(T::Array[::OpenApiSDK::Shared::Termination]), two_percent_shareholder: T.nilable(T::Boolean), version: T.nilable(::String), work_email: T.nilable(::String)).void }
      def initialize(first_name: nil, last_name: nil, uuid: nil, company_uuid: nil, current_employment_status: nil, custom_fields: nil, date_of_birth: nil, department: nil, eligible_paid_time_off: nil, email: nil, garnishments: nil, has_ssn: nil, jobs: nil, manager_uuid: nil, middle_initial: nil, onboarded: nil, onboarding_documents_config: nil, onboarding_status: nil, payment_method: nil, phone: nil, preferred_first_name: nil, ssn: nil, terminated: nil, terminations: nil, two_percent_shareholder: nil, version: nil, work_email: nil)
        @first_name = first_name
        @last_name = last_name
        @uuid = uuid
        @company_uuid = company_uuid
        @current_employment_status = current_employment_status
        @custom_fields = custom_fields
        @date_of_birth = date_of_birth
        @department = department
        @eligible_paid_time_off = eligible_paid_time_off
        @email = email
        @garnishments = garnishments
        @has_ssn = has_ssn
        @jobs = jobs
        @manager_uuid = manager_uuid
        @middle_initial = middle_initial
        @onboarded = onboarded
        @onboarding_documents_config = onboarding_documents_config
        @onboarding_status = onboarding_status
        @payment_method = payment_method
        @phone = phone
        @preferred_first_name = preferred_first_name
        @ssn = ssn
        @terminated = terminated
        @terminations = terminations
        @two_percent_shareholder = two_percent_shareholder
        @version = version
        @work_email = work_email
      end
    end
  end
end
