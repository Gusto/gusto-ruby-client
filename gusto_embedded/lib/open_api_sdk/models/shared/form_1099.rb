# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class Form1099 < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The UUID of the form
      field :uuid, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('uuid') } }
      # The contractor UUID
      field :contractor_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('contractor_uuid') } }
      # The description of the form
      field :description, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('description') } }
      # If the form is in a draft state. E.g. End of year tax forms may be provided in a draft state prior to being finalized.
      field :draft, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('draft') } }
      # The type identifier of the form
      field :name, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('name') } }
      # The quarter of this form. This value is currently always null since it is not present on any contractor forms.
      field :quarter, T.nilable(::Integer), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('quarter') } }
      # A boolean flag that indicates whether the form needs signing or not. Note that this value will change after the form is signed.
      field :requires_signing, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('requires_signing') } }
      # The title of the form
      field :title, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('title') } }
      # The year of this form. For some forms, e.g. tax forms, this is the year which the form represents. A 1099 for January - December 2022 would be delivered in January 2023 and have a year value of 2022. This value is nullable and will not be present on all forms.
      field :year, T.nilable(::Integer), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('year') } }


      sig { params(uuid: ::String, contractor_uuid: T.nilable(::String), description: T.nilable(::String), draft: T.nilable(T::Boolean), name: T.nilable(::String), quarter: T.nilable(::Integer), requires_signing: T.nilable(T::Boolean), title: T.nilable(::String), year: T.nilable(::Integer)).void }
      def initialize(uuid: nil, contractor_uuid: nil, description: nil, draft: nil, name: nil, quarter: nil, requires_signing: nil, title: nil, year: nil)
        @uuid = uuid
        @contractor_uuid = contractor_uuid
        @description = description
        @draft = draft
        @name = name
        @quarter = quarter
        @requires_signing = requires_signing
        @title = title
        @year = year
      end
    end
  end
end
