# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  

    class PostV1CompanySignatoriesRequestBody < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :birthday, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('birthday') } }

      field :email, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('email') } }

      field :first_name, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('first_name') } }
      # The signatory's home address
      field :home_address, ::OpenApiSDK::Operations::HomeAddress, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('home_address') } }

      field :last_name, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('last_name') } }

      field :phone, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('phone') } }

      field :ssn, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('ssn') } }

      field :title, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('title') } }

      field :middle_initial, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('middle_initial') } }


      sig { params(birthday: ::String, email: ::String, first_name: ::String, home_address: ::OpenApiSDK::Operations::HomeAddress, last_name: ::String, phone: ::String, ssn: ::String, title: ::String, middle_initial: T.nilable(::String)).void }
      def initialize(birthday: nil, email: nil, first_name: nil, home_address: nil, last_name: nil, phone: nil, ssn: nil, title: nil, middle_initial: nil)
        @birthday = birthday
        @email = email
        @first_name = first_name
        @home_address = home_address
        @last_name = last_name
        @phone = phone
        @ssn = ssn
        @title = title
        @middle_initial = middle_initial
      end
    end
  end
end
