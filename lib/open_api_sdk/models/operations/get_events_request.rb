# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  

    class GetEventsRequest < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # A string containing the exact event name (e.g. `employee.created`), or use a wildcard match to filter for a group of events (e.g. `employee.*`, `*.created`, `notification.*.created` etc.)
      field :event_type, T.nilable(::String), { 'query_param': { 'field_name': 'event_type', 'style': 'form', 'explode': true } }
      # Limits the number of objects returned in a single response, between 1 and 100. The default is 25
      field :limit, T.nilable(::String), { 'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': true } }
      # The UUID of the company. If not specified, will return all events for all companies.
      field :resource_uuid, T.nilable(::String), { 'query_param': { 'field_name': 'resource_uuid', 'style': 'form', 'explode': true } }
      # A string indicating whether to sort resulting events in ascending (asc) or descending (desc) chronological order. Events are sorted by their `timestamp`. Defaults to asc if left empty.
      field :sort_order, T.nilable(::OpenApiSDK::Shared::SortOrder), { 'query_param': { 'field_name': 'sort_order', 'style': 'form', 'explode': true } }
      # A cursor for pagination. Returns all events occuring after the specified UUID (exclusive). Events are sorted according to the provided sort_order param.
      field :starting_after_uuid, T.nilable(::String), { 'query_param': { 'field_name': 'starting_after_uuid', 'style': 'form', 'explode': true } }
      # Determines the date-based API version associated with your API call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used.
      field :x_gusto_api_version, T.nilable(::OpenApiSDK::Shared::VersionHeader), { 'header': { 'field_name': 'X-Gusto-API-Version', 'style': 'simple', 'explode': false } }


      sig { params(event_type: T.nilable(::String), limit: T.nilable(::String), resource_uuid: T.nilable(::String), sort_order: T.nilable(::OpenApiSDK::Shared::SortOrder), starting_after_uuid: T.nilable(::String), x_gusto_api_version: T.nilable(::OpenApiSDK::Shared::VersionHeader)).void }
      def initialize(event_type: nil, limit: nil, resource_uuid: nil, sort_order: nil, starting_after_uuid: nil, x_gusto_api_version: nil)
        @event_type = event_type
        @limit = limit
        @resource_uuid = resource_uuid
        @sort_order = sort_order
        @starting_after_uuid = starting_after_uuid
        @x_gusto_api_version = x_gusto_api_version
      end
    end
  end
end
