# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  
    # An object representing the company contribution type and value.
    class Contribution < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The company contribution scheme.
      # 
      # `amount`: The company contributes a fixed amount per payroll. If elective is true, the contribution is matching, dollar-for-dollar.
      # 
      # `percentage`: The company contributes a percentage of the payroll amount per payroll period. If elective is true, the contribution is matching, dollar-for-dollar.
      # 
      # `tiered`: The size of the company contribution corresponds to the size of the employee deduction relative to a tiered matching scheme.
      field :type, T.nilable(::OpenApiSDK::Operations::PostV1EmployeesEmployeeIdEmployeeBenefitsType), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('type'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Operations::PostV1EmployeesEmployeeIdEmployeeBenefitsType, true) } }
      # For the `amount` and `percentage` contribution types, the value of the corresponding amount or percentage.
      # 
      # For the `tiered` contribution type, an array of tiers.
      field :value, T.nilable(::Object), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('value') } }


      sig { params(type: T.nilable(::OpenApiSDK::Operations::PostV1EmployeesEmployeeIdEmployeeBenefitsType), value: T.nilable(::Object)).void }
      def initialize(type: nil, value: nil)
        @type = type
        @value = value
      end
    end
  end
end
