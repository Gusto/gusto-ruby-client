# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  
    # Submit wages, benefits, taxes for each employee
    class ExternalPayrollItems < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :benefits, T.nilable(T::Array[::OpenApiSDK::Operations::Benefits]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('benefits') } }

      field :earnings, T.nilable(T::Array[::OpenApiSDK::Operations::Earnings]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('earnings') } }
      # The UUID of the employee.
      field :employee_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('employee_uuid') } }
      # An array of taxes for the employee. Depends on your company selections, taxes include federal income tax, social security, medicare, and more.
      field :taxes, T.nilable(T::Array[::OpenApiSDK::Operations::Taxes]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('taxes') } }


      sig { params(benefits: T.nilable(T::Array[::OpenApiSDK::Operations::Benefits]), earnings: T.nilable(T::Array[::OpenApiSDK::Operations::Earnings]), employee_uuid: T.nilable(::String), taxes: T.nilable(T::Array[::OpenApiSDK::Operations::Taxes])).void }
      def initialize(benefits: nil, earnings: nil, employee_uuid: nil, taxes: nil)
        @benefits = benefits
        @earnings = earnings
        @employee_uuid = employee_uuid
        @taxes = taxes
      end
    end
  end
end
