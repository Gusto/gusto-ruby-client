# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  

    class PostCompaniesCompanyUuidReportsRequestBody < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # Columns to include in the report
      field :columns, T::Array[::OpenApiSDK::Operations::Columns], { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('columns') } }
      # The type of file to generate
      field :file_type, ::OpenApiSDK::Operations::FileType, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('file_type'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Operations::FileType, false) } }
      # How to group the report
      field :groupings, T::Array[::OpenApiSDK::Operations::Groupings], { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('groupings') } }
      # The title of the report
      field :custom_name, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('custom_name') } }
      # Departments to filter by
      field :department_uuids, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('department_uuids') } }
      # Dismissed end date of employees to filter by
      field :dismissed_end_date, T.nilable(::Date), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('dismissed_end_date'), 'decoder': Utils.date_from_iso_format(true) } }
      # Dismissed start date of employees to filter by
      field :dismissed_start_date, T.nilable(::Date), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('dismissed_start_date'), 'decoder': Utils.date_from_iso_format(true) } }
      # Employees to filter by
      field :employee_uuids, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('employee_uuids') } }
      # Employee employment status to filter by
      field :employment_status, T.nilable(::OpenApiSDK::Operations::PostCompaniesCompanyUuidReportsEmploymentStatus), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('employment_status'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Operations::PostCompaniesCompanyUuidReportsEmploymentStatus, true) } }
      # Employee employment type to filter by
      field :employment_type, T.nilable(::OpenApiSDK::Operations::EmploymentType), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('employment_type'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Operations::EmploymentType, true) } }
      # End date of data to filter by
      field :end_date, T.nilable(::Date), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('end_date'), 'decoder': Utils.date_from_iso_format(true) } }
      # Payment method to filter by
      field :payment_method, T.nilable(::OpenApiSDK::Operations::PostCompaniesCompanyUuidReportsPaymentMethod), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('payment_method'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Operations::PostCompaniesCompanyUuidReportsPaymentMethod, true) } }
      # Start date of data to filter by
      field :start_date, T.nilable(::Date), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('start_date'), 'decoder': Utils.date_from_iso_format(true) } }
      # Whether to include subtotals and grand totals in the report
      field :with_totals, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('with_totals') } }
      # Work addresses to filter by
      field :work_address_uuids, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('work_address_uuids') } }


      sig { params(columns: T::Array[::OpenApiSDK::Operations::Columns], file_type: ::OpenApiSDK::Operations::FileType, groupings: T::Array[::OpenApiSDK::Operations::Groupings], custom_name: T.nilable(::String), department_uuids: T.nilable(T::Array[::String]), dismissed_end_date: T.nilable(::Date), dismissed_start_date: T.nilable(::Date), employee_uuids: T.nilable(T::Array[::String]), employment_status: T.nilable(::OpenApiSDK::Operations::PostCompaniesCompanyUuidReportsEmploymentStatus), employment_type: T.nilable(::OpenApiSDK::Operations::EmploymentType), end_date: T.nilable(::Date), payment_method: T.nilable(::OpenApiSDK::Operations::PostCompaniesCompanyUuidReportsPaymentMethod), start_date: T.nilable(::Date), with_totals: T.nilable(T::Boolean), work_address_uuids: T.nilable(T::Array[::String])).void }
      def initialize(columns: nil, file_type: nil, groupings: nil, custom_name: nil, department_uuids: nil, dismissed_end_date: nil, dismissed_start_date: nil, employee_uuids: nil, employment_status: nil, employment_type: nil, end_date: nil, payment_method: nil, start_date: nil, with_totals: nil, work_address_uuids: nil)
        @columns = columns
        @file_type = file_type
        @groupings = groupings
        @custom_name = custom_name
        @department_uuids = department_uuids
        @dismissed_end_date = dismissed_end_date
        @dismissed_start_date = dismissed_start_date
        @employee_uuids = employee_uuids
        @employment_status = employment_status
        @employment_type = employment_type
        @end_date = end_date
        @payment_method = payment_method
        @start_date = start_date
        @with_totals = with_totals
        @work_address_uuids = work_address_uuids
      end
    end
  end
end
