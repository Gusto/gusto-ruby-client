# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  
    # [for `tax_rate`] Describes the validation required for the tax rate
    class Validation < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # Describes the type of tax_rate validation rule
      field :type, ::OpenApiSDK::Shared::TaxRequirementMetadataValidationType, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('type'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Shared::TaxRequirementMetadataValidationType, false) } }
      # [for `min_max`] The inclusive upper bound of the tax rate
      field :max, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('max') } }
      # [for `min_max`] The inclusive lower bound of the tax rate
      field :min, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('min') } }
      # [for `one_of`] The possible, unformatted tax rates for selection.
      # - e.g. ["0.0", "0.001"] representing 0% and 0.1%
      # 
      field :rates, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('rates') } }


      sig { params(type: ::OpenApiSDK::Shared::TaxRequirementMetadataValidationType, max: T.nilable(::String), min: T.nilable(::String), rates: T.nilable(T::Array[::String])).void }
      def initialize(type: nil, max: nil, min: nil, rates: nil)
        @type = type
        @max = max
        @min = min
        @rates = rates
      end
    end
  end
end
