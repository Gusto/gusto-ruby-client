# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  
    # Representation of an ACH transaction
    class AchTransaction < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # Unique identifier of an ACH transaction
      field :uuid, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('uuid') } }
      # The amount of money moved by the ACH transaction. This amount is always non-negative.
      field :amount, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('amount') } }
      # Unique identifier of the company to which the ACH transaction belongs
      field :company_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('company_uuid') } }
      # The description of the ACH transaction. Can be used to identify the ACH transaction on the recipient's bank statement.
      field :description, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('description') } }
      # The error code associated with the ACH transaction, if any. If there is no error on the ACH transaction, this field will be nil. See [this article](https://engineering.gusto.com/how-ach-works-a-developer-perspective-part-2/) for a complete list of ACH return codes.
      field :error_code, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('error_code') } }
      # The date of the payment associated with the ACH transaction
      field :payment_date, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('payment_date') } }
      # The direction of the payment
      field :payment_direction, T.nilable(::OpenApiSDK::Shared::PaymentDirection), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('payment_direction'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Shared::PaymentDirection, true) } }
      # The date of the payment event check associated with the ACH transaction
      field :payment_event_check_date, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('payment_event_check_date') } }
      # The type of payment event associated with the ACH transaction
      field :payment_event_type, T.nilable(::OpenApiSDK::Shared::PaymentEventType), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('payment_event_type'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Shared::PaymentEventType, true) } }
      # Unique identifier for the payment event associated with the ACH transaction
      field :payment_event_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('payment_event_uuid') } }
      # The status of the ACH transaction
      field :payment_status, T.nilable(::OpenApiSDK::Shared::PaymentStatus), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('payment_status'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Shared::PaymentStatus, true) } }
      # The type of recipient associated with the ACH transaction
      field :recipient_type, T.nilable(::OpenApiSDK::Shared::AchTransactionRecipientType), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('recipient_type'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Shared::AchTransactionRecipientType, true) } }
      # Unique identifier for the recipient associated with the ACH transaction
      field :recipient_uuid, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('recipient_uuid') } }
      # The type of transaction associated with the ACH transaction
      field :transaction_type, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('transaction_type') } }


      sig { params(uuid: ::String, amount: T.nilable(::String), company_uuid: T.nilable(::String), description: T.nilable(::String), error_code: T.nilable(::String), payment_date: T.nilable(::String), payment_direction: T.nilable(::OpenApiSDK::Shared::PaymentDirection), payment_event_check_date: T.nilable(::String), payment_event_type: T.nilable(::OpenApiSDK::Shared::PaymentEventType), payment_event_uuid: T.nilable(::String), payment_status: T.nilable(::OpenApiSDK::Shared::PaymentStatus), recipient_type: T.nilable(::OpenApiSDK::Shared::AchTransactionRecipientType), recipient_uuid: T.nilable(::String), transaction_type: T.nilable(::String)).void }
      def initialize(uuid: nil, amount: nil, company_uuid: nil, description: nil, error_code: nil, payment_date: nil, payment_direction: nil, payment_event_check_date: nil, payment_event_type: nil, payment_event_uuid: nil, payment_status: nil, recipient_type: nil, recipient_uuid: nil, transaction_type: nil)
        @uuid = uuid
        @amount = amount
        @company_uuid = company_uuid
        @description = description
        @error_code = error_code
        @payment_date = payment_date
        @payment_direction = payment_direction
        @payment_event_check_date = payment_event_check_date
        @payment_event_type = payment_event_type
        @payment_event_uuid = payment_event_uuid
        @payment_status = payment_status
        @recipient_type = recipient_type
        @recipient_uuid = recipient_uuid
        @transaction_type = transaction_type
      end
    end
  end
end
