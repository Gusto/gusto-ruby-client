# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  
    # Example response
    class EmployeeStateTax < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The employee's uuid
      field :employee_uuid, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('employee_uuid') } }

      field :questions, T::Array[::OpenApiSDK::Shared::EmployeeStateTaxQuestion], { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('questions') } }
      # Two letter US state abbreviation
      field :state, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('state') } }

      field :file_new_hire_report, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('file_new_hire_report') } }

      field :is_work_state, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('is_work_state') } }


      sig { params(employee_uuid: ::String, questions: T::Array[::OpenApiSDK::Shared::EmployeeStateTaxQuestion], state: ::String, file_new_hire_report: T.nilable(T::Boolean), is_work_state: T.nilable(T::Boolean)).void }
      def initialize(employee_uuid: nil, questions: nil, state: nil, file_new_hire_report: nil, is_work_state: nil)
        @employee_uuid = employee_uuid
        @questions = questions
        @state = state
        @file_new_hire_report = file_new_hire_report
        @is_work_state = is_work_state
      end
    end
  end
end
